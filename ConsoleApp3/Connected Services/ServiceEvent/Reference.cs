//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApp3.ServiceEvent {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceEvent.ICalService", CallbackContract=typeof(ConsoleApp3.ServiceEvent.ICalServiceCallback))]
    public interface ICalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalService/Calculate", ReplyAction="http://tempuri.org/ICalService/CalculateResponse")]
        void Calculate(string town, string station, int time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalService/Calculate", ReplyAction="http://tempuri.org/ICalService/CalculateResponse")]
        System.Threading.Tasks.Task CalculateAsync(string town, string station, int time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalService/SubscribeCalculatedEvent", ReplyAction="http://tempuri.org/ICalService/SubscribeCalculatedEventResponse")]
        void SubscribeCalculatedEvent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalService/SubscribeCalculatedEvent", ReplyAction="http://tempuri.org/ICalService/SubscribeCalculatedEventResponse")]
        System.Threading.Tasks.Task SubscribeCalculatedEventAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalService/SubscribeCalculationFinishedEvent", ReplyAction="http://tempuri.org/ICalService/SubscribeCalculationFinishedEventResponse")]
        void SubscribeCalculationFinishedEvent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalService/SubscribeCalculationFinishedEvent", ReplyAction="http://tempuri.org/ICalService/SubscribeCalculationFinishedEventResponse")]
        System.Threading.Tasks.Task SubscribeCalculationFinishedEventAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalService/Calculated")]
        void Calculated(int nbvelo, string town, string station);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalService/CalculationFinished")]
        void CalculationFinished();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalServiceChannel : ConsoleApp3.ServiceEvent.ICalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalServiceClient : System.ServiceModel.DuplexClientBase<ConsoleApp3.ServiceEvent.ICalService>, ConsoleApp3.ServiceEvent.ICalService {
        
        public CalServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CalServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CalServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CalServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CalServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Calculate(string town, string station, int time) {
            base.Channel.Calculate(town, station, time);
        }
        
        public System.Threading.Tasks.Task CalculateAsync(string town, string station, int time) {
            return base.Channel.CalculateAsync(town, station, time);
        }
        
        public void SubscribeCalculatedEvent() {
            base.Channel.SubscribeCalculatedEvent();
        }
        
        public System.Threading.Tasks.Task SubscribeCalculatedEventAsync() {
            return base.Channel.SubscribeCalculatedEventAsync();
        }
        
        public void SubscribeCalculationFinishedEvent() {
            base.Channel.SubscribeCalculationFinishedEvent();
        }
        
        public System.Threading.Tasks.Task SubscribeCalculationFinishedEventAsync() {
            return base.Channel.SubscribeCalculationFinishedEventAsync();
        }
    }
}
